What are restful service -:  
                            REST is used to build Web services that are lightweight and maintainable. 
A service which is built on the REST architecture is called a RESTful service. 
The underlying protocol for REST is HTTP, which is the basic web protocol. 
REST stands for REpresentational State Transfer.


The key elements of a Restful implementation are as follows:

1. Resources  
2. Request Headers 
3. Request Body
4. Response Body
5. Response status code


These are the following restful methods-:
POST â€“ This would be used to create a new object using the restful web service.
GET - This would be used to get a list of all onject using the restful web service.
PUT - This would be used to update all object using the restful web service.
DELETE - This would be used to delete all object using the restful web service.


Difference between Restful Service Vs Regular Service:

REST vs. SOAP

There are significant differences between Normal and restful web services. 
The following points break down the features of each web service.

REST

1. RESTful web services are stateless. You can test this condition by restarting the server 
and checking if interactions survive.
2. For most servers, RESTful web services provide a good caching infrastructure over an HTTP GET method. 
This can improve the performance if the information the service returns is not altered frequently and is not dynamic.
3. Service producers and consumers must understand the context and content being passed along as 
there is no standard set of rules to describe the REST web services interface.
4. REST is useful for restricted-profile devices, such as mobile, for which the overhead of additional
parameters are less (e.g., headers).
5. A REST-based implementation is simple compared to SOAP.

SOAP

1. The Web Services Description Language (WSDL) describes a common set of rules to define the messages, 
bindings, operations and location of the service. WSDL is akin to a contract to define the interface that the service offers.
2. Normal requires less plumbing code than REST services design (e.g., transactions, security, coordination, 
addressing and trust). 

3. Normal web services, such as JAX-WS, are useful for asynchronous processing and invocation.
4. Normal supports several protocols and technologies, including WSDL, XSDs and WS-Addressing.



